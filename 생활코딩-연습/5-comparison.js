// 주어진 값들이 같은지, 다른지, 큰지, 작은지를 구분하는 것을 의미한다.
// 조건문과 결합 됐을 때 큰 힘을 가진다.

// '연산자'란 값에 대해서 어떤 작업을 컴퓨터에게 지시하기 위한 기호이다.

/* 비교 연산자를 사용해서 나온 결과는 'true'나 'false'로 나타난다.
    이것을 불린(boolean)이라고 부르는 데이터 형식이다. */



/*  ==  동등 연산자(equal operator)
    좌항과 우항을 비교해서 서로 값이 같다면 true 다르다면 false가 된다.
    = 한 개만 있으면 '대입 연산자'이고, == 두 개가 있어야 '동등 연산자'이다.
    동등 연산자는 데이터의 유형이 달라도 정보가 같으면 true가 나온다.
    그래서 프로그램이 커지면 동등 연산자는 오류를 발생시킬 수 있다.  */
    1 == 2
    false
    3 == 3
    true
    "one" == "three"
    false
    "apple" == "apple"
    true

/*  ===  일치 연산자(strict equal operator)
    좌항과 우항이 '정확하게' 같을 때 true 다르면 false가 된다.
    즉, 데이터의 정보와 형식도 일치할 때만 true가 된다.
    그래서 데이터 타입의 차이까지 고려하는 일치 연산자를 사용하길 강력히 권고된다!!                         */
    1 === "1"
    false
    1 == "1"
    true

/*  'undefined' 는 "값이 정의되지 않다"는 뜻이고, 'null' 은 "값이 없다"는 뜻이다.
    둘은 차이가 있다.
    undefined는 의도 없이 값이 없다는 것이고,
    null은 프로그래머가 의도적으로 값이 없음을 정의한 데이터 형식이다.
    undefined와 null 모두 각각 데이터 타입이다.   */
    undefined == null
    true
    undefined === null
    false
/*  'true', 'false'라는 것은 'boolean'이라는 데이터 형식이다.
    동등 연산자에서는 '1'을 'true'로 간주하며 나머지 숫자들은 'false'로 간주한다.  */
    true == 1
    true
    true == 2
    false
    true == 3
    false
/*  그러나 일치 연산자에서는 '1'도 'false'로 간주한다.   */
    true === 1
    false
    true === 2
    false
/*  '!'는 부정을 의미한다. '같다'의 부정은 '같지 않다'이다.
    이것을 기호로는 '!='로 표시한다.   */
    1 != 2
    true
    5 != 5
    false
/*  '!=='은 정확하게 같지 않다는 의미다.   */
/*  '>' 좌항이 우항보다 크면 참, 그렇지 않다면 거짓이다.  */
    5 > 3
    true
/*  '>='은 좌항이 우항보다 크거나 같다는 의미이다.  */
    10 <= 5
    false